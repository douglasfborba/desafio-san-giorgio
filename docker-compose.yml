services:
  san-giorgio:
    build: .
    restart: always
    container_name: san-giorgio
    ports:
      - '8080:8080'
    depends_on:
      postgres:
        condition: service_healthy
      localstack:
        condition: service_healthy
    networks:
      - postgres-network
      - localstack-network

  adminer:
    image: adminer:4.8.1
    restart: always
    container_name: adminer
    ports:
      - '9100:8080'
    external_links:
      - postgres:db
    depends_on:
      - postgres
    networks:
      - postgres-network

  postgres:
    image: postgres:10.23-alpine
    restart: always
    container_name: postgres
    shm_size: 128mb
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: admin
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready', '-d', 'db_prod' ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    networks:
      - postgres-network

  sqs-admin:
    image: pacovk/sqs-admin:0.6.1
    restart: always
    container_name: sqs-admin
    ports:
      - '3999:3999'
    environment:
      SQS_ENDPOINT_URL: 'http://localstack:4566'
      SQS_AWS_REGION: 'us-east-1'
      AWS_ACCESS_KEY_ID: 'ANUJDEKAVADIYAEXAMPLE'
      AWS_SECRET_ACCESS_KEY: '2QvM4/Tdmf38SkcD/qalvXO4EXAMPLEKEY'
      AWS_SESSION_TOKEN: '9fd597e7-7b7f-596a-944f-c88e74edc494'
    depends_on:
      - localstack
    networks:
      - localstack-network

  localstack:
    image: localstack/localstack:3.7.2
    restart: always
    container_name: localstack
    ports:
      - '4566:4566'
    environment:
      DEBUG: 1
      SERVICES: sqs
      EXTRA_CORS_ALLOWED_ORIGINS: '*'
    volumes:
      - ./scripts/localstack-setup.sh:/etc/localstack/init/ready.d/script.
    networks:
      - localstack-network

networks:
  postgres-network:
    driver: bridge
  localstack-network:
    driver: bridge